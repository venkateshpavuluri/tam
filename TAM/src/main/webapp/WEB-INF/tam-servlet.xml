<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<!-- @Controller, @Service, @Configuration, etc. -->
	<context:component-scan base-package="com.mnt.tam" />
	<!--Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	<mvc:interceptors>
		<bean id="webContentInterceptor"
			class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="true" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
		</bean>
		<!-- I18N Configuration -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
				<property name="paramName" value="language" />
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<mvc:resources location="/img/" mapping="/img/**" />
	<!-- i18n configurations: which i18n resolver we want use CookieLocaleResolver 
		or SessionLocaleResolver -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
	</bean>
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>/Resources/messages</value>
				<value>/Resources/operators</value>
				<value>/Resources/DataBase</value>
			</list>
		</property>
		<property name="fallbackToSystemLocale" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	<!-- Tiles Configuration -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	<bean id="view"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.tiles2.TilesView</value>
		</property>
	</bean>

	<bean id="internalResourceViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/Login/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- max upload size in bytes -->
		<property name="maxUploadSize" value="20971520" /> <!-- 20MB -->
		<!-- max size of file in memory (in bytes) -->
		<property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
	</bean>
	<!-- Property placeholder configurer for database settings -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/Resources/DataBase.properties" />
	</bean>
<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/jdbcPool"/>
    </bean>
    
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
		
	<!-- 	hibernate.connection.datasource = java:/comp/env/jdbc/jdbcPool
hibernate.dialect = org.hibernate.dialect.MySQLDialect -->
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.Oracle10gDialect
				</prop>
				<prop key="hibernate.show_sql">
			true
				</prop>
				 <prop key="hibernate.cache.use_second_level_cache">true</prop>
				   <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				
		<!-- 		 <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>    
     <prop key="net.sf.ehcache.configurationResourceName">com/cache/ehcache.xml</prop> 
			 -->	
				   <prop key="net.sf.ehcache.configurationResourceName">com/cache/ehcache.xml</prop>
					<prop key="hibernate.dialect">
					org.hibernate.dialect.Oracle10gDialect
				</prop>
			</props>
		</property>
		  <property name="annotatedClasses">
			<list>
				<value>com.mnt.tam.bean.School</value>
				<value>com.mnt.tam.bean.Student</value>
				<value>com.mnt.tam.bean.Section</value>
				<value>com.mnt.tam.bean.Classes</value>
				<value>com.mnt.tam.bean.StudentClass</value>
				<value>com.mnt.tam.bean.SubjectType</value>
				<value>com.mnt.tam.bean.TermBean</value>
				<value>com.mnt.tam.bean.TermTest</value>
		          <value>com.mnt.tam.bean.Test</value>
				  <value>com.mnt.tam.bean.TestType</value> 
			     <value>com.mnt.tam.bean.SubjectBean</value> 
					<value>com.mnt.tam.bean.TestResult</value> 
					<value>com.mnt.tam.bean.TeacherType</value> 
				<value>com.mnt.tam.bean.Teacher</value> 
				<value>com.mnt.tam.bean.TeacherSubject</value> 
				<value>com.mnt.tam.bean.Privilege</value> 
				<value>com.mnt.tam.bean.UserRolePrivilege</value> 
				<value>com.mnt.tam.bean.UserRoles</value>
				<value>com.mnt.tam.bean.Users</value>
				<value>com.mnt.tam.bean.Roles</value>
				<value>com.mnt.tam.bean.StudentTestResult</value>
				<value>com.mnt.tam.bean.Country</value>
			</list>
		</property>  
	</bean>
	<!-- HibernateTransactionManager -->
	<bean id="hibernateTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
</beans>
